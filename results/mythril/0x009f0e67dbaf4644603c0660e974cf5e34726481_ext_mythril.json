{"error": null, "issues": [{"address": 370, "code": "4);\n        _;\n    }\n\n    function transfer(", "contract": "StandardToken", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x009f0e67dbaf4644603c0660e974cf5e34726481_ext.sol", "function": "fallback", "lineno": 43, "max_gas_used": 605, "min_gas_used": 180, "severity": "Medium", "sourceMap": "1429:44", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {"balance": "0x0", "code": "6060604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b3811461007c57806318160ddd146100b257806323b872dd146100d757806370a08231146100ff578063a9059cbb1461011e578063dd62ed3e14610140575b600080fd5b341561008757600080fd5b61009e600160a060020a0360043516602435610165565b604051901515815260200160405180910390f35b34156100bd57600080fd5b6100c56101dd565b60405190815260200160405180910390f35b34156100e257600080fd5b61009e600160a060020a03600435811690602435166044356101e3565b341561010a57600080fd5b6100c5600160a060020a036004351661036e565b341561012957600080fd5b61009e600160a060020a0360043516602435610389565b341561014b57600080fd5b6100c5600160a060020a0360043581169060243516610498565b600060023660441461017357fe5b600160a060020a03338116600081815260026020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35060019392505050565b60005481565b600160a060020a0383166000908152600160205260408120548290108015906102335750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b801561023f5750600082115b80156102645750600160a060020a038316600090815260016020526040902054828101115b1561036357600160a060020a03831660009081526001602052604090205461028c90836104d3565b600160a060020a0380851660009081526001602052604080822093909355908616815220546102bb90836104f0565b600160a060020a03808616600090815260016020908152604080832094909455600281528382203390931682529190915220546102f890836104f0565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610367565b5060005b9392505050565b600160a060020a031660009081526001602052604090205490565b600160a060020a0333166000908152600160205260408120548290108015906103b25750600082115b80156103d75750600160a060020a038316600090815260016020526040902054828101115b1561048e57600160a060020a0333166000908152600160205260409020546103ff90836104f0565b600160a060020a03338116600090815260016020526040808220939093559085168152205461042e90836104d3565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610492565b5060005b92915050565b60006002366044146104a657fe5b5050600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282018381108015906104e85750828110155b151561036757fe5b600080828410156104fd57fe5b50509003905600a165627a7a72305820b996033f2948f0639bdcc12eebbbe0a74be01c1d984015c7890dd02d8c57ff1e0029", "nonce": 0, "storage": "{}"}, "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000f57600080fd5b6105308061001e6000396000f3006060604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b3811461007c57806318160ddd146100b257806323b872dd146100d757806370a08231146100ff578063a9059cbb1461011e578063dd62ed3e14610140575b600080fd5b341561008757600080fd5b61009e600160a060020a0360043516602435610165565b604051901515815260200160405180910390f35b34156100bd57600080fd5b6100c56101dd565b60405190815260200160405180910390f35b34156100e257600080fd5b61009e600160a060020a03600435811690602435166044356101e3565b341561010a57600080fd5b6100c5600160a060020a036004351661036e565b341561012957600080fd5b61009e600160a060020a0360043516602435610389565b341561014b57600080fd5b6100c5600160a060020a0360043581169060243516610498565b600060023660441461017357fe5b600160a060020a03338116600081815260026020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35060019392505050565b60005481565b600160a060020a0383166000908152600160205260408120548290108015906102335750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b801561023f5750600082115b80156102645750600160a060020a038316600090815260016020526040902054828101115b1561036357600160a060020a03831660009081526001602052604090205461028c90836104d3565b600160a060020a0380851660009081526001602052604080822093909355908616815220546102bb90836104f0565b600160a060020a03808616600090815260016020908152604080832094909455600281528382203390931682529190915220546102f890836104f0565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610367565b5060005b9392505050565b600160a060020a031660009081526001602052604090205490565b600160a060020a0333166000908152600160205260408120548290108015906103b25750600082115b80156103d75750600160a060020a038316600090815260016020526040902054828101115b1561048e57600160a060020a0333166000908152600160205260409020546103ff90836104f0565b600160a060020a03338116600090815260016020526040808220939093559085168152205461042e90836104d3565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610492565b5060005b92915050565b60006002366044146104a657fe5b5050600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282018381108015906104e85750828110155b151561036757fe5b600080828410156104fd57fe5b50509003905600a165627a7a72305820b996033f2948f0639bdcc12eebbbe0a74be01c1d984015c7890dd02d8c57ff1e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x095ea7b3", "input": "0x095ea7b3", "name": "approve(address,uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 767, "code": "4);\n        _;\n    }\n\n    function transfer(", "contract": "PrivateCityTokens", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x009f0e67dbaf4644603c0660e974cf5e34726481_ext.sol", "function": "approve(address,uint256)", "lineno": 43, "max_gas_used": 627, "min_gas_used": 202, "severity": "Medium", "sourceMap": "1429:44", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {"balance": "0x0", "code": "6060604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016857806323b872dd1461018d5780632ff2e9dc146101b5578063313ce567146101c857806370a08231146101db57806395d89b41146101fa578063a9059cbb1461020d578063dd62ed3e1461022f575b600080fd5b34156100b357600080fd5b6100bb610254565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f75780820151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013d57600080fd5b610154600160a060020a03600435166024356102f2565b604051901515815260200160405180910390f35b341561017357600080fd5b61017b61036a565b60405190815260200160405180910390f35b341561019857600080fd5b610154600160a060020a0360043581169060243516604435610370565b34156101c057600080fd5b61017b6104fb565b34156101d357600080fd5b61017b610501565b34156101e657600080fd5b61017b600160a060020a0360043516610507565b341561020557600080fd5b6100bb610522565b341561021857600080fd5b610154600160a060020a036004351660243561058d565b341561023a57600080fd5b61017b600160a060020a036004358116906024351661069c565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b505050505081565b600060023660441461030057fe5b600160a060020a03338116600081815260026020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35060019392505050565b60005481565b600160a060020a0383166000908152600160205260408120548290108015906103c05750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b80156103cc5750600082115b80156103f15750600160a060020a038316600090815260016020526040902054828101115b156104f057600160a060020a03831660009081526001602052604090205461041990836106d7565b600160a060020a03808516600090815260016020526040808220939093559086168152205461044890836106f4565b600160a060020a038086166000908152600160209081526040808320949094556002815283822033909316825291909152205461048590836106f4565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060016104f4565b5060005b9392505050565b60065481565b60055481565b600160a060020a031660009081526001602052604090205490565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ea5780601f106102bf576101008083540402835291602001916102ea565b600160a060020a0333166000908152600160205260408120548290108015906105b65750600082115b80156105db5750600160a060020a038316600090815260016020526040902054828101115b1561069257600160a060020a03331660009081526001602052604090205461060390836106f4565b600160a060020a03338116600090815260016020526040808220939093559085168152205461063290836106d7565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610696565b5060005b92915050565b60006002366044146106aa57fe5b5050600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282018381108015906106ec5750828110155b15156104f457fe5b6000808284101561070157fe5b50509003905600a165627a7a72305820d56b8be05386636db67da30567bab09d9e30ed88057feafe1698ad212a6ea3360029", "nonce": 0, "storage": "{}"}, "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405260408051908101604052601381527f50726976617465204369747920546f6b656e73000000000000000000000000006020820152600390805161004b9291602001906100d6565b5060408051908101604052600381527f5043540000000000000000000000000000000000000000000000000000000000602082015260049080516100939291602001906100d6565b5060126005556a0d3c21bcecceda1000000060065534156100b357600080fd5b6006546000818155600160a060020a033316815260016020526040902055610171565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011757805160ff1916838001178555610144565b82800160010185558215610144579182015b82811115610144578251825591602001919060010190610129565b50610150929150610154565b5090565b61016e91905b80821115610150576000815560010161015a565b90565b610734806101806000396000f3006060604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016857806323b872dd1461018d5780632ff2e9dc146101b5578063313ce567146101c857806370a08231146101db57806395d89b41146101fa578063a9059cbb1461020d578063dd62ed3e1461022f575b600080fd5b34156100b357600080fd5b6100bb610254565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f75780820151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013d57600080fd5b610154600160a060020a03600435166024356102f2565b604051901515815260200160405180910390f35b341561017357600080fd5b61017b61036a565b60405190815260200160405180910390f35b341561019857600080fd5b610154600160a060020a0360043581169060243516604435610370565b34156101c057600080fd5b61017b6104fb565b34156101d357600080fd5b61017b610501565b34156101e657600080fd5b61017b600160a060020a0360043516610507565b341561020557600080fd5b6100bb610522565b341561021857600080fd5b610154600160a060020a036004351660243561058d565b341561023a57600080fd5b61017b600160a060020a036004358116906024351661069c565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b505050505081565b600060023660441461030057fe5b600160a060020a03338116600081815260026020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35060019392505050565b60005481565b600160a060020a0383166000908152600160205260408120548290108015906103c05750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b80156103cc5750600082115b80156103f15750600160a060020a038316600090815260016020526040902054828101115b156104f057600160a060020a03831660009081526001602052604090205461041990836106d7565b600160a060020a03808516600090815260016020526040808220939093559086168152205461044890836106f4565b600160a060020a038086166000908152600160209081526040808320949094556002815283822033909316825291909152205461048590836106f4565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060016104f4565b5060005b9392505050565b60065481565b60055481565b600160a060020a031660009081526001602052604090205490565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ea5780601f106102bf576101008083540402835291602001916102ea565b600160a060020a0333166000908152600160205260408120548290108015906105b65750600082115b80156105db5750600160a060020a038316600090815260016020526040902054828101115b1561069257600160a060020a03331660009081526001602052604090205461060390836106f4565b600160a060020a03338116600090815260016020526040808220939093559085168152205461063290836106d7565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610696565b5060005b92915050565b60006002366044146106aa57fe5b5050600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282018381108015906106ec5750828110155b15156104f457fe5b6000808284101561070157fe5b50509003905600a165627a7a72305820d56b8be05386636db67da30567bab09d9e30ed88057feafe1698ad212a6ea3360029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x095ea7b3", "input": "0x095ea7b3", "name": "approve(address,uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}}, {"address": 1189, "code": "4);\n        _;\n    }\n\n    function transfer(", "contract": "StandardToken", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x009f0e67dbaf4644603c0660e974cf5e34726481_ext.sol", "function": "allowance(address,address)", "lineno": 43, "max_gas_used": 724, "min_gas_used": 299, "severity": "Medium", "sourceMap": "1429:44", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {"balance": "0x0", "code": "6060604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b3811461007c57806318160ddd146100b257806323b872dd146100d757806370a08231146100ff578063a9059cbb1461011e578063dd62ed3e14610140575b600080fd5b341561008757600080fd5b61009e600160a060020a0360043516602435610165565b604051901515815260200160405180910390f35b34156100bd57600080fd5b6100c56101dd565b60405190815260200160405180910390f35b34156100e257600080fd5b61009e600160a060020a03600435811690602435166044356101e3565b341561010a57600080fd5b6100c5600160a060020a036004351661036e565b341561012957600080fd5b61009e600160a060020a0360043516602435610389565b341561014b57600080fd5b6100c5600160a060020a0360043581169060243516610498565b600060023660441461017357fe5b600160a060020a03338116600081815260026020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35060019392505050565b60005481565b600160a060020a0383166000908152600160205260408120548290108015906102335750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b801561023f5750600082115b80156102645750600160a060020a038316600090815260016020526040902054828101115b1561036357600160a060020a03831660009081526001602052604090205461028c90836104d3565b600160a060020a0380851660009081526001602052604080822093909355908616815220546102bb90836104f0565b600160a060020a03808616600090815260016020908152604080832094909455600281528382203390931682529190915220546102f890836104f0565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610367565b5060005b9392505050565b600160a060020a031660009081526001602052604090205490565b600160a060020a0333166000908152600160205260408120548290108015906103b25750600082115b80156103d75750600160a060020a038316600090815260016020526040902054828101115b1561048e57600160a060020a0333166000908152600160205260409020546103ff90836104f0565b600160a060020a03338116600090815260016020526040808220939093559085168152205461042e90836104d3565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610492565b5060005b92915050565b60006002366044146104a657fe5b5050600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282018381108015906104e85750828110155b151561036757fe5b600080828410156104fd57fe5b50509003905600a165627a7a72305820b996033f2948f0639bdcc12eebbbe0a74be01c1d984015c7890dd02d8c57ff1e0029", "nonce": 0, "storage": "{}"}, "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000f57600080fd5b6105308061001e6000396000f3006060604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b3811461007c57806318160ddd146100b257806323b872dd146100d757806370a08231146100ff578063a9059cbb1461011e578063dd62ed3e14610140575b600080fd5b341561008757600080fd5b61009e600160a060020a0360043516602435610165565b604051901515815260200160405180910390f35b34156100bd57600080fd5b6100c56101dd565b60405190815260200160405180910390f35b34156100e257600080fd5b61009e600160a060020a03600435811690602435166044356101e3565b341561010a57600080fd5b6100c5600160a060020a036004351661036e565b341561012957600080fd5b61009e600160a060020a0360043516602435610389565b341561014b57600080fd5b6100c5600160a060020a0360043581169060243516610498565b600060023660441461017357fe5b600160a060020a03338116600081815260026020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35060019392505050565b60005481565b600160a060020a0383166000908152600160205260408120548290108015906102335750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b801561023f5750600082115b80156102645750600160a060020a038316600090815260016020526040902054828101115b1561036357600160a060020a03831660009081526001602052604090205461028c90836104d3565b600160a060020a0380851660009081526001602052604080822093909355908616815220546102bb90836104f0565b600160a060020a03808616600090815260016020908152604080832094909455600281528382203390931682529190915220546102f890836104f0565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610367565b5060005b9392505050565b600160a060020a031660009081526001602052604090205490565b600160a060020a0333166000908152600160205260408120548290108015906103b25750600082115b80156103d75750600160a060020a038316600090815260016020526040902054828101115b1561048e57600160a060020a0333166000908152600160205260409020546103ff90836104f0565b600160a060020a03338116600090815260016020526040808220939093559085168152205461042e90836104d3565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610492565b5060005b92915050565b60006002366044146104a657fe5b5050600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282018381108015906104e85750828110155b151561036757fe5b600080828410156104fd57fe5b50509003905600a165627a7a72305820b996033f2948f0639bdcc12eebbbe0a74be01c1d984015c7890dd02d8c57ff1e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xdd62ed3e", "input": "0xdd62ed3e", "name": "allowance(address,address)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 1705, "code": "4);\n        _;\n    }\n\n    function transfer(", "contract": "PrivateCityTokens", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x009f0e67dbaf4644603c0660e974cf5e34726481_ext.sol", "function": "allowance(address,address)", "lineno": 43, "max_gas_used": 812, "min_gas_used": 387, "severity": "Medium", "sourceMap": "1429:44", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {"balance": "0x0", "code": "6060604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016857806323b872dd1461018d5780632ff2e9dc146101b5578063313ce567146101c857806370a08231146101db57806395d89b41146101fa578063a9059cbb1461020d578063dd62ed3e1461022f575b600080fd5b34156100b357600080fd5b6100bb610254565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f75780820151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013d57600080fd5b610154600160a060020a03600435166024356102f2565b604051901515815260200160405180910390f35b341561017357600080fd5b61017b61036a565b60405190815260200160405180910390f35b341561019857600080fd5b610154600160a060020a0360043581169060243516604435610370565b34156101c057600080fd5b61017b6104fb565b34156101d357600080fd5b61017b610501565b34156101e657600080fd5b61017b600160a060020a0360043516610507565b341561020557600080fd5b6100bb610522565b341561021857600080fd5b610154600160a060020a036004351660243561058d565b341561023a57600080fd5b61017b600160a060020a036004358116906024351661069c565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b505050505081565b600060023660441461030057fe5b600160a060020a03338116600081815260026020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35060019392505050565b60005481565b600160a060020a0383166000908152600160205260408120548290108015906103c05750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b80156103cc5750600082115b80156103f15750600160a060020a038316600090815260016020526040902054828101115b156104f057600160a060020a03831660009081526001602052604090205461041990836106d7565b600160a060020a03808516600090815260016020526040808220939093559086168152205461044890836106f4565b600160a060020a038086166000908152600160209081526040808320949094556002815283822033909316825291909152205461048590836106f4565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060016104f4565b5060005b9392505050565b60065481565b60055481565b600160a060020a031660009081526001602052604090205490565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ea5780601f106102bf576101008083540402835291602001916102ea565b600160a060020a0333166000908152600160205260408120548290108015906105b65750600082115b80156105db5750600160a060020a038316600090815260016020526040902054828101115b1561069257600160a060020a03331660009081526001602052604090205461060390836106f4565b600160a060020a03338116600090815260016020526040808220939093559085168152205461063290836106d7565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610696565b5060005b92915050565b60006002366044146106aa57fe5b5050600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282018381108015906106ec5750828110155b15156104f457fe5b6000808284101561070157fe5b50509003905600a165627a7a72305820d56b8be05386636db67da30567bab09d9e30ed88057feafe1698ad212a6ea3360029", "nonce": 0, "storage": "{}"}, "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405260408051908101604052601381527f50726976617465204369747920546f6b656e73000000000000000000000000006020820152600390805161004b9291602001906100d6565b5060408051908101604052600381527f5043540000000000000000000000000000000000000000000000000000000000602082015260049080516100939291602001906100d6565b5060126005556a0d3c21bcecceda1000000060065534156100b357600080fd5b6006546000818155600160a060020a033316815260016020526040902055610171565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011757805160ff1916838001178555610144565b82800160010185558215610144579182015b82811115610144578251825591602001919060010190610129565b50610150929150610154565b5090565b61016e91905b80821115610150576000815560010161015a565b90565b610734806101806000396000f3006060604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016857806323b872dd1461018d5780632ff2e9dc146101b5578063313ce567146101c857806370a08231146101db57806395d89b41146101fa578063a9059cbb1461020d578063dd62ed3e1461022f575b600080fd5b34156100b357600080fd5b6100bb610254565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f75780820151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013d57600080fd5b610154600160a060020a03600435166024356102f2565b604051901515815260200160405180910390f35b341561017357600080fd5b61017b61036a565b60405190815260200160405180910390f35b341561019857600080fd5b610154600160a060020a0360043581169060243516604435610370565b34156101c057600080fd5b61017b6104fb565b34156101d357600080fd5b61017b610501565b34156101e657600080fd5b61017b600160a060020a0360043516610507565b341561020557600080fd5b6100bb610522565b341561021857600080fd5b610154600160a060020a036004351660243561058d565b341561023a57600080fd5b61017b600160a060020a036004358116906024351661069c565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b505050505081565b600060023660441461030057fe5b600160a060020a03338116600081815260026020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35060019392505050565b60005481565b600160a060020a0383166000908152600160205260408120548290108015906103c05750600160a060020a0380851660009081526002602090815260408083203390941683529290522054829010155b80156103cc5750600082115b80156103f15750600160a060020a038316600090815260016020526040902054828101115b156104f057600160a060020a03831660009081526001602052604090205461041990836106d7565b600160a060020a03808516600090815260016020526040808220939093559086168152205461044890836106f4565b600160a060020a038086166000908152600160209081526040808320949094556002815283822033909316825291909152205461048590836106f4565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060016104f4565b5060005b9392505050565b60065481565b60055481565b600160a060020a031660009081526001602052604090205490565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ea5780601f106102bf576101008083540402835291602001916102ea565b600160a060020a0333166000908152600160205260408120548290108015906105b65750600082115b80156105db5750600160a060020a038316600090815260016020526040902054828101115b1561069257600160a060020a03331660009081526001602052604090205461060390836106f4565b600160a060020a03338116600090815260016020526040808220939093559085168152205461063290836106d7565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a3506001610696565b5060005b92915050565b60006002366044146106aa57fe5b5050600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282018381108015906106ec5750828110155b15156104f457fe5b6000808284101561070157fe5b50509003905600a165627a7a72305820d56b8be05386636db67da30567bab09d9e30ed88057feafe1698ad212a6ea3360029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xdd62ed3e", "input": "0xdd62ed3e", "name": "allowance(address,address)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}}], "success": true}
